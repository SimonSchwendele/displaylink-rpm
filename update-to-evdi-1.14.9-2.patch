diff -uNrd evdi-b/evdi-1.14.9/Jenkinsfile evdi-orig/Jenkinsfile
--- evdi-b/evdi-1.14.9/Jenkinsfile	2025-03-25 03:36:12.000000000 -0400
+++ evdi-orig/Jenkinsfile	2025-04-01 07:24:12.000000000 -0400
@@ -36,7 +36,7 @@
             }
             steps {
             script {
-                  synopsys_detect detectProperties: "--detect.project.name='Evdi' --detect.project.version.name='${env.GIT_BRANCH}' --detect.excluded.directories=tmp,bd_evdi,synopsys_download --detect.output.path='${env.WORKSPACE}/bd_evdi'", downloadStrategyOverride: [$class: 'ScriptOrJarDownloadStrategy']
+                  blackduck_detect detectProperties: "--detect.project.name='Evdi' --detect.project.version.name='${env.GIT_BRANCH}' --detect.excluded.directories=tmp,bd_evdi,synopsys_download --detect.output.path='${env.WORKSPACE}/bd_evdi'", downloadStrategyOverride: [$class: 'ScriptOrJarDownloadStrategy']
                   def buildUrl = "$BUILD_URL"
                   env.BLACKDUCK = sh(script: "curl -Lk '${buildUrl}/consoleText' | grep 'Black Duck Project BOM:'", returnStdout: true)
             }
diff -uNrd evdi-b/evdi-1.14.9/module/evdi_connector.c evdi-orig/module/evdi_connector.c
--- evdi-b/evdi-1.14.9/module/evdi_connector.c	2025-03-25 03:36:12.000000000 -0400
+++ evdi-orig/module/evdi_connector.c	2025-04-01 07:24:12.000000000 -0400
@@ -63,7 +63,7 @@
 }
 
 static bool is_lowest_frequency_mode_of_given_resolution(
-	struct drm_connector *connector, struct drm_display_mode *mode)
+	struct drm_connector *connector, const struct drm_display_mode *mode)
 {
 	struct drm_display_mode *modeptr;
 
@@ -78,7 +78,11 @@
 }
 
 static enum drm_mode_status evdi_mode_valid(struct drm_connector *connector,
+#if KERNEL_VERSION(6, 15, 0) <= LINUX_VERSION_CODE
+					    const struct drm_display_mode *mode)
+#else
 					    struct drm_display_mode *mode)
+#endif
 {
 	struct evdi_device *evdi = connector->dev->dev_private;
 	uint32_t area_limit = mode->hdisplay * mode->vdisplay;
diff -uNrd evdi-b/evdi-1.14.9/module/evdi_drm_drv.c evdi-orig/module/evdi_drm_drv.c
--- evdi-b/evdi-1.14.9/module/evdi_drm_drv.c	2025-03-25 03:36:12.000000000 -0400
+++ evdi-orig/module/evdi_drm_drv.c	2025-04-01 07:24:12.000000000 -0400
@@ -104,6 +104,12 @@
 	.open = evdi_driver_open,
 	.postclose = evdi_driver_postclose,
 
+#if KERNEL_VERSION(6, 15, 0) <= LINUX_VERSION_CODE
+#ifdef CONFIG_FB
+	.fbdev_probe = evdifb_create,
+#endif
+#endif
+
 	/* gem hooks */
 #if KERNEL_VERSION(5, 11, 0) <= LINUX_VERSION_CODE || defined(EL8)
 #elif KERNEL_VERSION(5, 9, 0) <= LINUX_VERSION_CODE
diff -uNrd evdi-b/evdi-1.14.9/module/evdi_drm_drv.h evdi-orig/module/evdi_drm_drv.h
--- evdi-b/evdi-1.14.9/module/evdi_drm_drv.h	2025-03-25 03:36:12.000000000 -0400
+++ evdi-orig/module/evdi_drm_drv.h	2025-04-01 07:24:12.000000000 -0400
@@ -36,6 +36,7 @@
 #include <drm/drm_rect.h>
 #include <drm/drm_gem.h>
 #include <drm/drm_framebuffer.h>
+#include <drm/drm_fb_helper.h>
 
 #include "evdi_debug.h"
 #include "tests/evdi_test.h"
@@ -102,6 +103,8 @@
 int evdi_fbdev_init(struct drm_device *dev);
 void evdi_fbdev_cleanup(struct drm_device *dev);
 void evdi_fbdev_unplug(struct drm_device *dev);
+int evdifb_create(struct drm_fb_helper *helper,
+			 struct drm_fb_helper_surface_size *sizes);
 #endif /* CONFIG_FB */
 struct drm_framebuffer *evdi_fb_user_fb_create(
 				struct drm_device *dev,
diff -uNrd evdi-b/evdi-1.14.9/module/evdi_fb.c evdi-orig/module/evdi_fb.c
--- evdi-b/evdi-1.14.9/module/evdi_fb.c	2025-03-25 03:36:12.000000000 -0400
+++ evdi-orig/module/evdi_fb.c	2025-04-01 07:24:12.000000000 -0400
@@ -349,7 +349,7 @@
 }
 
 #ifdef CONFIG_FB
-static int evdifb_create(struct drm_fb_helper *helper,
+int evdifb_create(struct drm_fb_helper *helper,
 			 struct drm_fb_helper_surface_size *sizes)
 {
 	struct evdi_fbdev *efbdev = (struct evdi_fbdev *)helper;
@@ -455,9 +455,12 @@
 	return ret;
 }
 
+#if KERNEL_VERSION(6, 15, 0) <= LINUX_VERSION_CODE
+#else
 static struct drm_fb_helper_funcs evdi_fb_helper_funcs = {
 	.fb_probe = evdifb_create,
 };
+#endif
 
 static void evdi_fbdev_destroy(__always_unused struct drm_device *dev,
 			       struct evdi_fbdev *efbdev)
@@ -501,7 +504,9 @@
 		return -ENOMEM;
 
 	evdi->fbdev = efbdev;
-#if KERNEL_VERSION(6, 3, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
+#if KERNEL_VERSION(6, 15, 0) <= LINUX_VERSION_CODE
+	drm_fb_helper_prepare(dev, &efbdev->helper, 32, NULL);
+#elif KERNEL_VERSION(6, 3, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
 	drm_fb_helper_prepare(dev, &efbdev->helper, 32, &evdi_fb_helper_funcs);
 #else
 	drm_fb_helper_prepare(dev, &efbdev->helper, &evdi_fb_helper_funcs);
